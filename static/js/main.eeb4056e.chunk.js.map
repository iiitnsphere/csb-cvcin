{"version":3,"sources":["firebase/utils.js","firebase/config.js","components/Editor.js","components/CardItem.js","components/Card.js","assests/ezgif.com-gif-maker.gif","components/Homepage.js","components/ArticleCard.js","components/Articles.js","components/CreateArticle.js","store/actionTypes.js","store/User/user.actions.js","components/AuthWrapper/index.js","components/forms/Buttons/index.js","components/SignIn/index.js","pages/Login/index.js","App.js","store/User/user.reducer.js","store/rootReducer.js","store/User/user.helpers.js","store/User/user.sagas.js","store/rootSaga.js","store/createStore.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","firestore","GoogleProvider","GoogleAuthProvider","setCustomParameters","prompt","handleUserProfile","a","userAuth","additionalData","uid","userRef","doc","get","exists","displayName","email","timestamp","FieldValue","serverTimestamp","userRoles","set","createdDate","Editor","useState","data","setData","name","setName","React","category","setCategory","title","setTitle","console","log","className","to","style","margin","value","onChange","event","handleCategoryChange","target","id","htmlFor","e","required","type","editor","ClassicEditor","onReady","getData","onBlur","onFocus","onClick","allData","collection","add","then","alert","catch","error","CardItem","interview","show","setShow","displayText","setDisplayText","border","marginTop","dangerouslySetInnerHTML","__html","Card","Homepage","interviewsData","setInterviewsData","useEffect","where","snapshot","docs","forEach","previousData","err","filter","display","justifyContent","width","height","src","image","alt","map","ArticleCard","article","rel","href","source","Articles","articles","setarticles","textAlign","CreateArticle","setSource","padding","preventDefault","articleData","actionTypes","EMAIL_SIGN_IN_START","SIGN_IN_SUCCESS","SIGN_IN_ERROR","SIGN_OUT","SIGN_UP_SUCCESS","SIGN_UP_ERROR","CHECK_USER_SESSION","SIGN_OUT_USER_START","SIGN_OUT_USER_SUCCESS","SIGN_UP_USER_START","RESET_PASSWORD_START","RESET_PASSWORD_SUCCESS","GOOGLE_SIGN_IN_START","USER_ERROR","RESET_USER_STATE","signInSuccess","user","payload","userError","AuthWrapper","headline","children","Button","otherProps","SignIn","props","dispatch","useDispatch","navigate","useNavigate","useSelector","state","currentUser","userErr","setEmail","password","setPassword","errors","setErrors","resetForm","Array","isArray","length","index","onSubmit","Login","App","path","element","exact","INITIAL_STATE","resetPasswordSuccess","snackBarText","userReducer","action","rootReducer","combineReducers","handleResetPasswordAPI","config","url","Promise","resolve","reject","sendPasswordResetEmail","getSnapshotFromUserAuth","emailSignIn","onEmailSignInStart","isUserAuthenticated","onCheckUserSession","signOutUser","onSignOutUserStart","signUpUser","onSignUpUserStart","resetPassword","onResetPasswordStart","googleSignIn","onGoogleSignInStart","userSagas","call","put","signInWithEmailAndPassword","message","takeLatest","unsubscribe","onAuthStateChanged","signOut","confirmPassword","createUserWithEmailAndPassword","handleSnackbar","signInWithPopup","all","rootSaga","sagaMiddleware","createSagaMiddle","middlewares","logger","store","createStore","applyMiddleware","run","rootElement","document","getElementById","ReactDOM","render"],"mappings":"2PAKAA,IAASC,cCLqB,CAC5BC,OAAQ,0CACRC,WAAY,+BACZC,UAAW,eACXC,cAAe,2BACfC,kBAAmB,eACnBC,MAAO,8CDCF,IAAMC,EAAOR,IAASQ,OAChBC,EAAYT,IAASS,YAErBC,EAAiB,IAAIV,IAASQ,KAAKG,mBAChDD,EAAeE,oBAAoB,CAAEC,OAAQ,mBAMtC,IAAMC,EAAiB,uCAAG,2CAAAC,EAAA,yDAASC,EAAT,EAASA,SAAUC,EAAnB,EAAmBA,eAU7CD,EAV0B,wDAWvBE,EAAQF,EAARE,IAEFC,EAAUV,EAAUW,IAAV,gBAAuBF,IAbR,SAcRC,EAAQE,MAdA,iBAgBjBC,OAhBiB,wBAiBrBC,EAAuBP,EAAvBO,YAAaC,EAAUR,EAAVQ,MACfC,EAAYzB,IAASS,UAAUiB,WAAWC,kBAC1CC,EAAY,CAAC,QAnBU,oBAsBrBT,EAAQU,IAAR,aACJN,cACAC,QACAM,YAAaL,EACbG,aAEGX,IA5BsB,4FAkCxBE,GAlCwB,2DAAH,sD,GA+CfnB,EAAf,E,MEkDe+B,EA3GA,WACb,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAgCC,IAAML,SAAS,aAA/C,mBAAOM,EAAP,KAAiBC,EAAjB,KACA,EAA0BP,mBAAS,IAAnC,mBAAOQ,EAAP,KAAcC,EAAd,KAiCA,OADAC,QAAQC,IAAIV,GAEV,sBAAKW,UAAU,MAAf,UACE,8CACA,8BACE,cAAC,IAAD,CAAMC,GAAG,IAAT,uBAGF,yBACEC,MAAO,CAAEC,OAAQ,QACjBZ,KAAK,WACLa,MAAOV,EACPW,SAAU,SAACC,GAAD,OA1Ca,SAACZ,GAC5BC,EAAYD,GACZI,QAAQC,IAAIL,GAwCaa,CAAqBD,EAAME,OAAOJ,QAJzD,UAME,wBAAQK,GAAG,IAAX,uBACA,wBAAQA,GAAG,IAAX,2BAGF,mDAEA,sBAAKP,MAAO,CAAEC,OAAQ,QAAtB,UACE,uBAAOO,QAAQ,QAAf,kBACA,uBACEL,SAAU,SAACM,GACTd,EAASc,EAAEH,OAAOJ,QAEpBQ,UAAQ,EACRH,GAAG,QACHI,KAAK,YAGT,gCACE,uBAAOH,QAAQ,OAAf,kBACA,uBACEL,SAAU,SAACM,GACTnB,EAAQmB,EAAEH,OAAOJ,QAEnBQ,UAAQ,EACRH,GAAG,OACHI,KAAK,YAGT,cAAC,WAAD,CACEC,OAAQC,IACR1B,KAAK,UACL2B,QAAS,SAACF,GAERhB,QAAQC,IAAI,0BAA2Be,IAEzCT,SAAU,SAACC,EAAOQ,GAChB,IAAMzB,EAAOyB,EAAOG,UACpB3B,EAAQD,IAEV6B,OAAQ,SAACZ,EAAOQ,GACdhB,QAAQC,IAAI,QAASe,IAEvBK,QAAS,SAACb,EAAOQ,GACfhB,QAAQC,IAAI,SAAUe,MAI1B,uBACEM,QAvFe,WACnB,IAAMC,EAAU,CACd9B,OACAK,QACAP,OACAwB,KAAMnB,GAGRI,QAAQC,IAAIsB,GAEPzB,GAAUP,GAASE,IAAQG,EAIhC7B,EACGyD,WAAW,cACXC,IAAIF,GACJG,MAAK,WACJC,MAAM,qCAEPC,OAAM,SAACC,GACNF,MAAM,2BAA4BE,MAVpCF,MAAM,0BA6EJvB,MAAO,CAAEC,OAAQ,QACjBU,KAAK,SACLT,MAAM,wB,QCjFCwB,EAzBE,SAACC,GAChB,MAAwBzC,oBAAS,GAAjC,mBAAO0C,EAAP,KAAaC,EAAb,KACA,EAAsC3C,mBAAS,gBAA/C,mBAAO4C,EAAP,KAAoBC,EAApB,KAKA,OACE,sBAAK/B,MAAO,CAAEgC,OAAQ,kBAAmBC,UAAW,UAApD,UACE,sBAAKjC,MAAO,CAAEC,OAAQ,QAAtB,UACE,+BAAO0B,EAAUA,UAAUA,UAAUjC,QACrC,uBAAMwB,QARW,WACrBW,GAASD,GACTG,EAAgBH,EAAoB,cAAb,aAMnB,eAAkCE,QAEnCF,GACC,qBACE5B,MAAO,CAAEC,OAAQ,QACjBiC,wBAAyB,CACvBC,OAAQR,EAAUA,UAAUA,UAAUxC,YCbnCiD,EAHF,SAACT,GACZ,OAAO,cAAC,EAAD,CAAUA,UAAWA,KCJf,MAA0B,gDCyE1BU,EApEE,WACf,MAA4CnD,mBAAS,IAArD,mBAAOoD,EAAP,KAAuBC,EAAvB,KACA,EAAgChD,IAAML,SAAS,aAA/C,mBAAOM,EAAP,KAAiBC,EAAjB,KA0BA,OAnBA+C,qBAAU,WACR7E,EACGyD,WAAW,cACXqB,MAAM,OAAQ,KAAMjD,GACpBjB,MACA+C,MAAK,SAACoB,GACLA,EAASC,KAAKC,SAAQ,SAACtE,GACrBiE,GAAkB,SAACM,GAAD,4BAAsBA,GAAtB,CAAoCvE,EAAIa,kBAG7DqC,OAAM,SAACsB,GACNlD,QAAQC,IAAIiD,MAGhBP,EACED,EAAeS,QAAO,SAACpB,GAAD,OAAeA,EAAUhB,OAASnB,QAEzD,CAACA,IAGF,8BACE,gCACE,sBAAKQ,MAAO,CAAEgD,QAAS,OAAQC,eAAgB,UAA/C,UACE,8CACA,8BACE,qBACEjD,MAAO,CAAEgD,QAAS,SAClBE,MAAM,OACNC,OAAO,OACPC,IAAKC,EACLC,IAAI,cAIV,sBAAKtD,MAAO,CAAEgD,QAAS,OAAQC,eAAgB,gBAA/C,UACE,8BACE,cAAC,IAAD,CAAMlD,GAAG,UAAT,mDAEF,8BACE,cAAC,IAAD,CAAMA,GAAG,WAAT,2BAGJ,yBACEC,MAAO,CAAEC,OAAQ,QACjBZ,KAAK,WACLa,MAAOV,EACPW,SAAU,SAACC,GAAD,OAnDW,SAACZ,GAC5BC,EAAYD,GACZI,QAAQC,IAAIL,GAiDea,CAAqBD,EAAME,OAAOJ,QAJzD,UAME,wBAAQK,GAAG,IAAX,uBACA,wBAAQA,GAAG,IAAX,2BAED+B,EAAeiB,KAAI,SAAC5B,GAAD,OAClB,cAAC,EAAD,CAA2BA,UAAWA,GAA3BA,EAAUtC,eChDhBmE,EAhBK,SAACC,GACnB,MAAsCvE,mBAAS,gBAA/C,6BAEA,OACE,qBAAKc,MAAO,CAAEgC,OAAQ,kBAAmBC,UAAW,UAApD,SACE,qBAAKjC,MAAO,CAAEC,OAAQ,QAAtB,SACE,8BACE,mBAAGyD,IAAI,aAAapD,OAAO,SAASqD,KAAMF,EAAQA,QAAQG,OAA1D,SACE,+BAAOH,EAAQA,QAAQ/D,iBC8BpBmE,EApCE,WACf,MAAgC3E,mBAAS,IAAzC,mBAAO4E,EAAP,KAAiBC,EAAjB,KAeA,OAbAvB,qBAAU,WACR7E,EACGyD,WAAW,YACX7C,MACA+C,MAAK,SAACoB,GACLA,EAASC,KAAKC,SAAQ,SAACtE,GACrByF,GAAY,SAAClB,GAAD,4BAAsBA,GAAtB,CAAoCvE,EAAIa,kBAGvDqC,OAAM,SAACsB,GACNlD,QAAQC,IAAIiD,QAEf,IAED,gCACE,oBAAI9C,MAAO,CAAEgE,UAAW,UAAxB,sBACA,sBAAKhE,MAAO,CAAEgD,QAAS,OAAQC,eAAgB,gBAA/C,UACE,8BACE,cAAC,IAAD,CAAMlD,GAAG,IAAT,uBAGF,8BACE,cAAC,IAAD,CAAMA,GAAG,iBAAT,kDAIH+D,EAASP,KAAI,SAACE,GAAD,OACZ,cAAC,EAAD,CAAiCA,QAASA,GAAxBA,EAAQ/D,cCsBnBuE,EAtDO,WACpB,MAA0B/E,mBAAS,IAAnC,mBAAOQ,EAAP,KAAcC,EAAd,KACA,EAA4BT,mBAAS,IAArC,mBAAO0E,EAAP,KAAeM,EAAf,KAwBA,OACE,gCACE,oBAAIlE,MAAO,CAAEgE,UAAW,UAAxB,sBACA,sBAAKhE,MAAO,CAAEmE,QAAS,QAAvB,UACE,uBAAO3D,QAAQ,QAAf,gCACA,uBACED,GAAG,QACHI,KAAK,OACLR,SAAU,SAACM,GACTd,EAASc,EAAEH,OAAOJ,aAIxB,sBAAKF,MAAO,CAAEmE,QAAS,QAAvB,UACE,uBAAO3D,QAAQ,SAAf,mCACA,uBACED,GAAG,SACHI,KAAK,OACLR,SAAU,SAACM,GACTyD,EAAUzD,EAAEH,OAAOJ,aAIzB,wBAAQgB,QA7CS,SAACT,GACpBA,EAAE2D,iBACF,IAAMC,EAAc,CAClB3E,QACAkE,UAGGlE,GAAUkE,EAKfjG,EACGyD,WAAW,YACXC,IAAIgD,GACJ/C,MAAK,WACJC,MAAM,qCAEPC,OAAM,SAACC,GACNF,MAAM,2BAA4BE,MAXpCF,MAAM,4BAqCN,iCCjCS+C,G,MAlBK,CAClBC,oBAAqB,sBACrBC,gBAAiB,kBACjBC,cAAe,gBACfC,SAAU,WACVC,gBAAiB,kBACjBC,cAAe,gBACfC,mBAAoB,qBACpBC,oBAAqB,sBACrBC,sBAAuB,wBACvBC,mBAAoB,qBACpBC,qBAAsB,uBACtBC,uBAAwB,yBACxBC,qBAAsB,uBACtBC,WAAY,aACZC,iBAAkB,qBCRPC,EAAgB,SAACC,GAAD,MAAW,CACtC5E,KAAM2D,EAAYE,gBAClBgB,QAASD,IAoBEE,EAAY,SAAC3C,GAAD,MAAU,CACjCnC,KAAM2D,EAAYc,WAClBI,QAAS,CAAC1C,KChBG4C,G,YAZK,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAC/B,OACE,qBAAK9F,UAAU,cAAf,SACE,sBAAKA,UAAU,OAAf,UACG6F,GAAY,6BAAKA,IAElB,qBAAK7F,UAAU,WAAf,SAA2B8F,GAAYA,W,qCCEhCC,EARA,SAAC,GAAiC,IAA/BD,EAA8B,EAA9BA,SAAaE,EAAiB,iBAC9C,OACE,gDAAQhG,UAAU,OAAUgG,GAA5B,aACGF,MCsEQG,EA9DA,SAACC,GACd,IAAMC,EAAWC,cACXC,EAAWC,cACjB,EAAiCC,aAAY,SAACC,GAAD,OAAWA,EAAMf,QAAtDgB,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,QACrB,EAA0BtH,mBAAS,IAAnC,mBAAOR,EAAP,KAAc+H,EAAd,KACA,EAAgCvH,mBAAS,IAAzC,mBAAOwH,EAAP,KAAiBC,EAAjB,KACA,EAA4BzH,mBAAS,IAArC,mBAAO0H,EAAP,KAAeC,EAAf,KAEArE,qBAAU,WACJ+D,IACFO,IACAX,EAAS,QAEV,CAACI,IAEJ/D,qBAAU,WACJuE,MAAMC,QAAQR,IAAYA,EAAQS,OAAS,GAC7CJ,EAAUL,KAEX,CAACA,IAEJ,IAAMM,EAAY,WAChBL,EAAS,IACTE,EAAY,KAgBd,OACE,cAAC,EAAD,2BALwB,CACxBhB,SAAU,UAIV,aACE,sBAAK7F,UAAU,WAAf,UACG8G,EAAOK,OAAS,GACf,6BACGL,EAAOrD,KAAI,SAAC9C,EAAGyG,GACd,OAAO,6BAAiBzG,GAARyG,QAKtB,sBAAMC,SAxBS,SAAC1G,GACpBA,EAAE2D,iBACF6B,EHxCkD,CACpDtF,KAAM2D,EAAYC,oBAClBiB,QGsC4B,CAAE9G,QAAOgI,eAsB/B,SACE,qBAAK5G,UAAU,eAAf,SACE,qBAAKA,UAAU,MAAf,SACE,cAAC,EAAD,CAAQoB,QAtBO,WACzB+E,EHEoC,CACtCtF,KAAM2D,EAAYa,wBGkBN,8CC5DCiC,EAJD,SAACpB,GACb,OAAO,cAAC,EAAD,KC4CMqB,MArCf,WACE,IAAQd,EAAgBF,aAAY,SAACC,GAAD,OAAWA,EAAMf,QAA7CgB,YACFN,EAAWC,cAqBjB,OApBA1D,qBAAU,WAiBRyD,ELnBmC,CACrCtF,KAAM2D,EAAYO,uBKmBf,IAGD,eAAC,IAAD,WACE,cAAC,IAAD,CAAOyC,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,EAAD,MAC9B,cAAC,IAAD,CAAOD,KAAK,UAAUC,QAAShB,EAAc,cAAC,EAAD,IAAa,cAAC,EAAD,MAC1D,cAAC,IAAD,CAAOiB,OAAK,EAACF,KAAK,WAAWC,QAAS,cAAC,EAAD,MACtC,cAAC,IAAD,CACED,KAAK,iBACLC,QAAShB,EAAc,cAAC,EAAD,IAAoB,cAAC,EAAD,U,iCCxC7CkB,EAAgB,CACpBlB,YAAa,KACbmB,sBAAsB,EACtBlB,QAAS,GACTmB,aAAc,IAiCDC,EA9BK,WAAoC,IAAnCtB,EAAkC,uDAA1BmB,EAAeI,EAAW,uCACrD,OAAQA,EAAOlH,MACb,KAAK2D,EAAYE,gBACf,OAAO,2BACF8B,GADL,IAEEC,YAAasB,EAAOrC,QACpBgB,QAAS,KAEb,KAAKlC,EAAYY,uBACf,OAAO,2BACFoB,GADL,IAEEoB,qBAAsBG,EAAOrC,QAC7BmC,aAAc,6BAElB,KAAKrD,EAAYc,WACf,OAAO,2BACFkB,GADL,IAEEE,QAASqB,EAAOrC,UAEpB,KAAKlB,EAAYe,iBACjB,KAAKf,EAAYS,sBACf,OAAO,2BACFuB,GACAmB,GAEP,QACE,OAAOnB,IC1BEwB,EAJKC,YAAgB,CAClCxC,KAAMqC,I,QCJKI,EAAyB,SAACtJ,GACrC,IAAMuJ,EAAS,CACbC,IAAK,+BAGP,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B3K,EACG4K,uBAAuB5J,EAAOuJ,GAC9B3G,MAAK,WACJ8G,OAED5G,OAAM,WAEL6G,EADY,6C,WCCHE,I,WA2BAC,I,YAiBAC,I,YASAC,I,YAkBAC,I,YAKAC,I,YAUAC,I,YAKAC,I,YAyBAC,I,YAKAC,I,YAaAC,I,YAIAC,I,YAaAC,I,YAIQC,IA3JlB,SAAUb,GAAwBhD,GAAlC,uFAUa,OAV2BpH,EAAxC,+BAAyD,GAAzD,kBAUmBkL,YAAKrL,EAAmB,CAC5CE,SAAUqH,EACVpH,mBAZC,OAcc,OAJXE,EAVH,gBAcoBA,EAAQE,MAd5B,OAeH,OADMmE,EAdH,iBAeG4G,YACJhE,EAAc,aACZ/E,GAAImC,EAASnC,IACVmC,EAASvD,UAlBb,gCAsBH,OAtBG,oCAsBGmK,YAAI7D,EAAU,EAAD,KAtBhB,sDA2BA,SAAU+C,GAAV,kFASc,OATd,IAAwBhD,QAAW9G,EAAnC,EAAmCA,MAAOgI,EAA1C,EAA0CA,SAA1C,kBASoBhJ,EAAK6L,2BAA2B7K,EAAOgI,GAT3D,OAUH,OAVG,SASKnB,EATL,EASKA,KATL,SAUGgD,GAAwBhD,GAV3B,+BAYH,OAZG,oCAYG+D,YAAI7D,EAAU,KAAI+D,UAZrB,sDAiBA,SAAUf,KAAV,iEAML,OANK,SAMCgB,YAAWnF,EAAYC,oBAAqBiE,IAN7C,wCASA,SAAUE,KAAV,uEAUc,OAVd,kBpBZE,IAAIP,SAAQ,SAACC,EAASC,GAC3B,IAAMqB,EAAchM,EAAKiM,oBAAmB,SAACzL,GAC3CwL,IACAtB,EAAQlK,KACPmK,MoBQA,UAUGnK,EAVH,wDAYH,OAZG,SAYGqK,GAAwBrK,GAZ3B,gHAkBA,SAAUyK,KAAV,iEAEL,OAFK,SAECc,YAAWnF,EAAYO,mBAAoB6D,IAF5C,wCAKA,SAAUE,KAAV,iEAGH,OAHG,kBAGGlL,EAAKkM,UAHR,OAIH,OAJG,SAIGN,YT3E+B,CACvC3I,KAAM2D,EAAYS,wBSsEb,2GAUA,SAAU8D,KAAV,iEAEL,OAFK,SAECY,YAAWnF,EAAYQ,oBAAqB8D,IAF7C,wCAKA,SAAUE,GAAV,+FACLtD,QAAW/G,EADN,EACMA,YAAaC,EADnB,EACmBA,MAAOgI,EAD1B,EAC0BA,SAAUmD,EADpC,EACoCA,gBAQrCnD,IAAamD,EATZ,gBAWH,MADY,uBAVT,SAWGP,YAAI7D,EAAU,CADR,0BAVT,wCAgBc,OAhBd,kBAgBoB/H,EAAKoM,+BAA+BpL,EAAOgI,GAhB/D,OAkBH,OAlBG,SAgBKnB,EAhBL,EAgBKA,KACFpH,EAAiB,CAAEM,eAjBtB,UAkBG8J,GAAwBhD,EAAMpH,GAlBjC,gCAoBH,OApBG,oCAoBGmL,YAAI7D,EAAU,KAAI+D,UApBrB,QAqBH5J,QAAQC,IAAR,MArBG,uDAyBA,SAAUkJ,KAAV,iEAEL,OAFK,SAECU,YAAWnF,EAAYU,mBAAoB8D,IAF5C,wCAKA,SAAUE,GAAV,8EAKH,OALG,IAA0BxD,QAAW9G,EAArC,EAAqCA,MAAOqL,EAA5C,EAA4CA,eAA5C,kBAKGV,YAAKrB,EAAwBtJ,GALhC,OAMH,OANG,SAMG4K,YTvGiC,CACzC3I,KAAM2D,EAAYY,uBAClBM,SAAS,IS+FJ,OAOHuE,IAPG,uBASH,OATG,mCASGT,YAAI7D,EAAU,EAAD,KAThB,sDAaA,SAAUwD,KAAV,iEACL,OADK,SACCQ,YAAWnF,EAAYW,qBAAsB+D,IAD9C,wCAIA,SAAUE,KAAV,yEAKc,OALd,kBAKoBxL,EAAKsM,gBAAgBpM,GALzC,OAMH,OANG,SAKK2H,EALL,EAKKA,KALL,SAMGgD,GAAwBhD,GAN3B,8BAQH,OARG,mCAQG+D,YAAI7D,EAAU,KAAI+D,UARrB,sDAaA,SAAUL,KAAV,iEACL,OADK,SACCM,YAAWnF,EAAYa,qBAAsB+D,IAD9C,wCAIQ,SAAUE,KAAV,iEACb,OADa,SACPa,YAAI,CACRZ,YAAKZ,IACLY,YAAKV,IACLU,YAAKR,IACLQ,YAAKN,IACLM,YAAKJ,IACLI,YAAKF,MAPM,wC,gBCtKUe,IAAV,SAAUA,KAAV,iEACb,OADa,SACPD,YAAI,CAACZ,YAAKD,MADH,wCCGf,IAAMe,GAAiBC,cACVC,GAAc,CAACF,GAAgBG,KAE/BC,GAAQC,YAAY1C,EAAa2C,IAAe,WAAf,EAAmBJ,KACjEF,GAAeO,IAAIR,IAEJK,UCNf3K,QAAQC,IAAI0K,IAEZ,IAAMI,GAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAAC,IAAD,CAAUR,MAAOA,GAAjB,SACE,cAAC,IAAD,UACE,cAAC,EAAD,UAINI,K","file":"static/js/main.eeb4056e.chunk.js","sourcesContent":["import firebase from \"firebase/compat/app\";\r\nimport \"firebase/compat/auth\";\r\nimport \"firebase/compat/firestore\";\r\nimport { firebaseConfig } from \"./config\";\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n//auth and firestore instances to be used wherever needed\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n//we can have multiple provider here we are using the google provider\r\nexport const GoogleProvider = new firebase.auth.GoogleAuthProvider();\r\nGoogleProvider.setCustomParameters({ prompt: \"select_account\" });\r\n//this function will be called when we click on the button signin with google\r\n// export const signInWithGoogle = () => auth.signInWithPopup(GoogleProvider);\r\n//this function is responsible for creating the new users in the users collection\r\n//because the users will be in different table in the auth section so we can create a\r\n//seperate section for users\r\nexport const handleUserProfile = async ({ userAuth, additionalData }) => {\r\n  /*\r\n\tit takes a user object and any additional data as props if user not signin then simply return \r\n\tif user exsists then destrture it\r\n\tthen get a reference to the users collection  with uid if not there it will created (i mean reference)\r\n\tthen call the get method if there it returns that snapshot if not then we can check the exists prperty\r\n\tif no document with that matching uid then exists is false if match then true\r\n\tif not match then we need to create the new user in the users collection\r\n\tif exists return back that reference or create a document and return back that reference\r\n\t*/\r\n  if (!userAuth) return;\r\n  const { uid } = userAuth;\r\n\r\n  const userRef = firestore.doc(`users/${uid}`);\r\n  const snapshot = await userRef.get();\r\n\r\n  if (!snapshot.exists) {\r\n    const { displayName, email } = userAuth;\r\n    const timestamp = firebase.firestore.FieldValue.serverTimestamp();\r\n    const userRoles = [\"user\"];\r\n\r\n    try {\r\n      await userRef.set({\r\n        displayName,\r\n        email,\r\n        createdDate: timestamp,\r\n        userRoles,\r\n\r\n        ...additionalData\r\n      });\r\n    } catch (err) {\r\n      // console.log(err);\r\n    }\r\n  }\r\n  return userRef;\r\n};\r\n\r\n//utility function for knowing whether a user is login or not\r\nexport const getCurrentUser = () => {\r\n  return new Promise((resolve, reject) => {\r\n    const unsubscribe = auth.onAuthStateChanged((userAuth) => {\r\n      unsubscribe();\r\n      resolve(userAuth);\r\n    }, reject);\r\n  });\r\n};\r\n\r\nexport default firebase;\r\n","export const firebaseConfig = {\r\n  apiKey: \"AIzaSyCB7-d03It1OKkmQJNIB1n-k_KsFqJ52FU\",\r\n  authDomain: \"sphere-dd938.firebaseapp.com\",\r\n  projectId: \"sphere-dd938\",\r\n  storageBucket: \"sphere-dd938.appspot.com\",\r\n  messagingSenderId: \"530194349432\",\r\n  appId: \"1:530194349432:web:e2d92ccaf0cd03e5999c8d\"\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\r\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\r\n\r\nimport { firestore } from \"../firebase/utils\";\r\n\r\nconst Editor = () => {\r\n  const [data, setData] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [category, setCategory] = React.useState(\"placement\");\r\n  const [title, setTitle] = useState(\"\");\r\n\r\n  const handleCategoryChange = (category) => {\r\n    setCategory(category);\r\n    console.log(category);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    const allData = {\r\n      name,\r\n      title,\r\n      data,\r\n      type: category\r\n    };\r\n\r\n    console.log(allData);\r\n\r\n    if (!title && !data && !name && category) {\r\n      alert(\"Fill mandatory fields\");\r\n      return;\r\n    }\r\n    firestore\r\n      .collection(\"interviews\")\r\n      .add(allData)\r\n      .then(() => {\r\n        alert(\"Document successfully written!\");\r\n      })\r\n      .catch((error) => {\r\n        alert(\"Error writing document: \", error);\r\n      });\r\n  };\r\n\r\n  console.log(data);\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>IIITN SPHERE</h1>\r\n      <div>\r\n        <Link to=\"/\">Go Back</Link>\r\n      </div>\r\n\r\n      <select\r\n        style={{ margin: \"1rem\" }}\r\n        name=\"category\"\r\n        value={category}\r\n        onChange={(event) => handleCategoryChange(event.target.value)}\r\n      >\r\n        <option id=\"0\">placement</option>\r\n        <option id=\"1\">internship</option>\r\n      </select>\r\n\r\n      <span>Select category</span>\r\n\r\n      <div style={{ margin: \"1rem\" }}>\r\n        <label htmlFor=\"title\">Role</label>\r\n        <input\r\n          onChange={(e) => {\r\n            setTitle(e.target.value);\r\n          }}\r\n          required\r\n          id=\"title\"\r\n          type=\"text\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"name\">Name</label>\r\n        <input\r\n          onChange={(e) => {\r\n            setName(e.target.value);\r\n          }}\r\n          required\r\n          id=\"name\"\r\n          type=\"text\"\r\n        />\r\n      </div>\r\n      <CKEditor\r\n        editor={ClassicEditor}\r\n        data=\"<p></p>\"\r\n        onReady={(editor) => {\r\n          // You can store the \"editor\" and use when it is needed.\r\n          console.log(\"Editor is ready to use!\", editor);\r\n        }}\r\n        onChange={(event, editor) => {\r\n          const data = editor.getData();\r\n          setData(data);\r\n        }}\r\n        onBlur={(event, editor) => {\r\n          console.log(\"Blur.\", editor);\r\n        }}\r\n        onFocus={(event, editor) => {\r\n          console.log(\"Focus.\", editor);\r\n        }}\r\n      />\r\n\r\n      <input\r\n        onClick={handleSubmit}\r\n        style={{ margin: \"1rem\" }}\r\n        type=\"button\"\r\n        value=\"Click to submit\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Editor;\r\n","import React, { useState } from \"react\";\r\n\r\nconst CardItem = (interview) => {\r\n  const [show, setShow] = useState(false);\r\n  const [displayText, setDisplayText] = useState(\"Read More...\");\r\n  const handleReadMore = () => {\r\n    setShow(!show);\r\n    setDisplayText(!show ? \"Collapse\" : \"ReadMore...\");\r\n  };\r\n  return (\r\n    <div style={{ border: \"1px solid green\", marginTop: \"0.5rem\" }}>\r\n      <div style={{ margin: \"1rem\" }}>\r\n        <span>{interview.interview.interview.title}</span>\r\n        <span onClick={handleReadMore}>: {displayText}</span>\r\n      </div>\r\n      {show && (\r\n        <div\r\n          style={{ margin: \"1rem\" }}\r\n          dangerouslySetInnerHTML={{\r\n            __html: interview.interview.interview.data\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardItem;\r\n","import React from \"react\";\r\n\r\nimport CardItem from \"./CardItem\";\r\nconst Card = (interview) => {\r\n  return <CardItem interview={interview} />;\r\n};\r\nexport default Card;\r\n","export default __webpack_public_path__ + \"static/media/ezgif.com-gif-maker.0a58a369.gif\";","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { firestore } from \"../firebase/utils\";\r\nimport Card from \"./Card\";\r\nimport image from \"../assests/ezgif.com-gif-maker.gif\";\r\nconst Homepage = () => {\r\n  const [interviewsData, setInterviewsData] = useState([]);\r\n  const [category, setCategory] = React.useState(\"placement\");\r\n\r\n  const handleCategoryChange = (category) => {\r\n    setCategory(category);\r\n    console.log(category);\r\n  };\r\n\r\n  useEffect(() => {\r\n    firestore\r\n      .collection(\"interviews\")\r\n      .where(\"type\", \"==\", category)\r\n      .get()\r\n      .then((snapshot) => {\r\n        snapshot.docs.forEach((doc) => {\r\n          setInterviewsData((previousData) => [...previousData, doc.data()]);\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n    setInterviewsData(\r\n      interviewsData.filter((interview) => interview.type === category)\r\n    );\r\n  }, [category]);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n          <h1>IIITN SPHERE</h1>\r\n          <div>\r\n            <img\r\n              style={{ display: \"block\" }}\r\n              width=\"70px\"\r\n              height=\"70px\"\r\n              src={image}\r\n              alt=\"logo\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div style={{ display: \"flex\", justifyContent: \"space-evenly\" }}>\r\n          <div>\r\n            <Link to=\"/create\">To write your experience click here</Link>\r\n          </div>\r\n          <div>\r\n            <Link to=\"/article\">Articles</Link>\r\n          </div>\r\n        </div>\r\n        <select\r\n          style={{ margin: \"1rem\" }}\r\n          name=\"category\"\r\n          value={category}\r\n          onChange={(event) => handleCategoryChange(event.target.value)}\r\n        >\r\n          <option id=\"0\">placement</option>\r\n          <option id=\"1\">internship</option>\r\n        </select>\r\n        {interviewsData.map((interview) => (\r\n          <Card key={interview.name} interview={interview} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Homepage;\r\n","import React, { useState } from \"react\";\r\n\r\nconst ArticleCard = (article) => {\r\n  const [displayText, setDisplayText] = useState(\"Read More...\");\r\n\r\n  return (\r\n    <div style={{ border: \"1px solid green\", marginTop: \"0.5rem\" }}>\r\n      <div style={{ margin: \"1rem\" }}>\r\n        <div>\r\n          <a rel=\"noreferrer\" target=\"_blank\" href={article.article.source}>\r\n            <span>{article.article.title}</span>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ArticleCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { firestore } from \"../firebase/utils\";\r\nimport ArticleCard from \"../components/ArticleCard\";\r\nconst Articles = () => {\r\n  const [articles, setarticles] = useState([]);\r\n\r\n  useEffect(() => {\r\n    firestore\r\n      .collection(\"articles\")\r\n      .get()\r\n      .then((snapshot) => {\r\n        snapshot.docs.forEach((doc) => {\r\n          setarticles((previousData) => [...previousData, doc.data()]);\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <h1 style={{ textAlign: \"center\" }}>Articles</h1>\r\n      <div style={{ display: \"flex\", justifyContent: \"space-evenly\" }}>\r\n        <div>\r\n          <Link to=\"/\">Go Back</Link>\r\n        </div>\r\n\r\n        <div>\r\n          <Link to=\"/article/write\">Click here to write the article</Link>\r\n        </div>\r\n      </div>\r\n\r\n      {articles.map((article) => (\r\n        <ArticleCard key={article.title} article={article} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Articles;\r\n","import React, { useState } from \"react\";\r\nimport { firestore } from \"../firebase/utils\";\r\nconst CreateArticle = () => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [source, setSource] = useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const articleData = {\r\n      title,\r\n      source\r\n    };\r\n\r\n    if (!title && !source) {\r\n      alert(\"Please fill all fileds.\");\r\n      return;\r\n    }\r\n\r\n    firestore\r\n      .collection(\"articles\")\r\n      .add(articleData)\r\n      .then(() => {\r\n        alert(\"Document successfully written!\");\r\n      })\r\n      .catch((error) => {\r\n        alert(\"Error writing document: \", error);\r\n      });\r\n  };\r\n  return (\r\n    <div>\r\n      <h1 style={{ textAlign: \"center\" }}>Articles</h1>\r\n      <div style={{ padding: \"1rem\" }}>\r\n        <label htmlFor=\"title\">Heading of article</label>\r\n        <input\r\n          id=\"title\"\r\n          type=\"text\"\r\n          onChange={(e) => {\r\n            setTitle(e.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n      <div style={{ padding: \"1rem\" }}>\r\n        <label htmlFor=\"source\">Source of the article</label>\r\n        <input\r\n          id=\"source\"\r\n          type=\"text\"\r\n          onChange={(e) => {\r\n            setSource(e.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n      <button onClick={handleSubmit}>Click to submit</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateArticle;\r\n","const actionTypes = {\r\n  EMAIL_SIGN_IN_START: \"EMAIL_SIGN_IN_START\",\r\n  SIGN_IN_SUCCESS: \"SIGN_IN_SUCCESS\",\r\n  SIGN_IN_ERROR: \"SIGN_IN_ERROR\",\r\n  SIGN_OUT: \"SIGN_OUT\",\r\n  SIGN_UP_SUCCESS: \"SIGN_UP_SUCCESS\",\r\n  SIGN_UP_ERROR: \"SIGN_UP_ERROR\",\r\n  CHECK_USER_SESSION: \"CHECK_USER_SESSION\",\r\n  SIGN_OUT_USER_START: \"SIGN_OUT_USER_START\",\r\n  SIGN_OUT_USER_SUCCESS: \"SIGN_OUT_USER_SUCCESS\",\r\n  SIGN_UP_USER_START: \"SIGN_UP_USER_START\",\r\n  RESET_PASSWORD_START: \"RESET_PASSWORD_START\",\r\n  RESET_PASSWORD_SUCCESS: \"RESET_PASSWORD_SUCCESS\",\r\n  GOOGLE_SIGN_IN_START: \"GOOGLE_SIGN_IN_START\",\r\n  USER_ERROR: \"USER_ERROR\",\r\n  RESET_USER_STATE: \"RESET_USER_STATE\"\r\n};\r\n\r\nexport default actionTypes;\r\n","import actionTypes from \"../actionTypes\";\r\n\r\nexport const emailSignInStart = (userCredentials) => ({\r\n  type: actionTypes.EMAIL_SIGN_IN_START,\r\n  payload: userCredentials\r\n});\r\n\r\nexport const signInSuccess = (user) => ({\r\n  type: actionTypes.SIGN_IN_SUCCESS,\r\n  payload: user\r\n});\r\n\r\nexport const checkUserSession = () => ({\r\n  type: actionTypes.CHECK_USER_SESSION\r\n});\r\n\r\nexport const signOutUserStart = () => ({\r\n  type: actionTypes.SIGN_OUT_USER_START\r\n});\r\n\r\nexport const signOutUserSuccess = () => ({\r\n  type: actionTypes.SIGN_OUT_USER_SUCCESS\r\n});\r\n\r\nexport const signUpUserStart = (userCredentials) => ({\r\n  type: actionTypes.SIGN_UP_USER_START,\r\n  payload: userCredentials\r\n});\r\n\r\nexport const userError = (err) => ({\r\n  type: actionTypes.USER_ERROR,\r\n  payload: [err]\r\n});\r\n\r\nexport const resetPasswordStart = (userCredentials) => ({\r\n  type: actionTypes.RESET_PASSWORD_START,\r\n  payload: userCredentials\r\n});\r\n\r\nexport const resetPasswordSuccess = () => ({\r\n  type: actionTypes.RESET_PASSWORD_SUCCESS,\r\n  payload: true\r\n});\r\n\r\nexport const resetUserState = () => ({\r\n  type: actionTypes.RESET_USER_STATE\r\n});\r\n\r\nexport const googleSignInStart = () => ({\r\n  type: actionTypes.GOOGLE_SIGN_IN_START\r\n});\r\n","import React from \"react\";\r\nimport \"./styles.scss\";\r\n\r\nconst AuthWrapper = ({ headline, children }) => {\r\n  return (\r\n    <div className=\"authWrapper\">\r\n      <div className=\"wrap\">\r\n        {headline && <h2>{headline}</h2>}\r\n\r\n        <div className=\"children\">{children && children}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthWrapper;\r\n","import React from \"react\";\r\nimport \"./styles.scss\";\r\n\r\nconst Button = ({ children, ...otherProps }) => {\r\n  return (\r\n    <button className=\"btn\" {...otherProps}>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport {\r\n  emailSignInStart,\r\n  googleSignInStart\r\n} from \"./../../store/User/user.actions\";\r\n\r\nimport \"./styles.scss\";\r\n\r\nimport AuthWrapper from \"./../AuthWrapper\";\r\nimport FormInput from \"./../forms/FormInput\";\r\nimport Button from \"./../forms/Buttons\";\r\n\r\nconst SignIn = (props) => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { currentUser, userErr } = useSelector((state) => state.user);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errors, setErrors] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      resetForm();\r\n      navigate(\"/\");\r\n    }\r\n  }, [currentUser]);\r\n\r\n  useEffect(() => {\r\n    if (Array.isArray(userErr) && userErr.length > 0) {\r\n      setErrors(userErr);\r\n    }\r\n  }, [userErr]);\r\n\r\n  const resetForm = () => {\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(emailSignInStart({ email, password }));\r\n  };\r\n\r\n  const handleGoogleSignIn = () => {\r\n    dispatch(googleSignInStart());\r\n  };\r\n\r\n  const configAuthWrapper = {\r\n    headline: \"LogIn\"\r\n  };\r\n\r\n  return (\r\n    <AuthWrapper {...configAuthWrapper}>\r\n      <div className=\"formWrap\">\r\n        {errors.length > 0 && (\r\n          <ul>\r\n            {errors.map((e, index) => {\r\n              return <li key={index}>{e}</li>;\r\n            })}\r\n          </ul>\r\n        )}\r\n\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"socialSignin\">\r\n            <div className=\"row\">\r\n              <Button onClick={handleGoogleSignIn}>Sign in with Google</Button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </AuthWrapper>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","import React from \"react\";\r\nimport SignIn from \"./../../components/SignIn\";\r\n\r\nconst Login = (props) => {\r\n  return <SignIn />;\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState, useEffect } from \"react\";\nimport { Routes, Route, Redirect } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Editor from \"./components/Editor\";\nimport Homepage from \"./components/Homepage\";\nimport Articles from \"./components/Articles\";\nimport CreateArticle from \"./components/CreateArticle\";\nimport \"./styles.css\";\nimport { checkUserSession } from \"./store/User/user.actions\";\nimport Login from \"./pages/Login\";\n\nfunction App() {\n  const { currentUser } = useSelector((state) => state.user);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    /*\n\t\tworking\n\t\tso after the component is mounted then we will setup a listener and which will be listening for \n\t\tauth changes if user login we receive the user object and if logout then we will receive null\n\t\tassuming the user is logged in inside the if check is there\n\t\twe pass that user object to handleUserProfile function (please look into that function what it does)\n\t\tthen we get back a user reference we setup a listener for that document and then update our local state \n\t\tof the current  user\n\t\tif logged out then reset the state of the current user using the setCurrentUser function\n\t\tin the render function we destruture the current user and pass to all the routes\n\t\tand based on the current we show the registartion,login or logout\n\t\tif already login redirect back to the homepage\n\t\tinside the render prop of the route we will render the components based on the current user for \n\t\tlogin route rest only the layout wrapping.\n\t\t\n\t\t*/\n    dispatch(checkUserSession());\n  }, []);\n\n  return (\n    <Routes>\n      <Route path=\"/\" element={<Homepage />} />\n      <Route path=\"/login\" element={<Login />} />\n      <Route path=\"/create\" element={currentUser ? <Editor /> : <Login />} />\n      <Route exact path=\"/article\" element={<Articles />} />\n      <Route\n        path=\"/article/write\"\n        element={currentUser ? <CreateArticle /> : <Login />}\n      />\n    </Routes>\n  );\n}\n\nexport default App;\n","import actionTypes from \"../actionTypes\";\r\n\r\nconst INITIAL_STATE = {\r\n  currentUser: null,\r\n  resetPasswordSuccess: false,\r\n  userErr: [],\r\n  snackBarText: \"\"\r\n};\r\n\r\nconst userReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SIGN_IN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentUser: action.payload,\r\n        userErr: []\r\n      };\r\n    case actionTypes.RESET_PASSWORD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        resetPasswordSuccess: action.payload,\r\n        snackBarText: \"Reset Link Sent To mail.\"\r\n      };\r\n    case actionTypes.USER_ERROR:\r\n      return {\r\n        ...state,\r\n        userErr: action.payload\r\n      };\r\n    case actionTypes.RESET_USER_STATE:\r\n    case actionTypes.SIGN_OUT_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ...INITIAL_STATE\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport userReducer from \"./User/user.reducer\";\r\n\r\n//here we combine all the reducers\r\n//whatever is the object present inside the combineReducers that is the redux store\r\nconst rootReducer = combineReducers({\r\n  user: userReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import { auth } from \"./../../firebase/utils\";\r\n\r\nexport const handleResetPasswordAPI = (email) => {\r\n  const config = {\r\n    url: \"http://localhost:3000/login\"\r\n  };\r\n\r\n  return new Promise((resolve, reject) => {\r\n    auth\r\n      .sendPasswordResetEmail(email, config)\r\n      .then(() => {\r\n        resolve();\r\n      })\r\n      .catch(() => {\r\n        const err = \"Email not found. Please try again.\";\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n","import { takeLatest, call, all, put } from \"redux-saga/effects\";\r\nimport {\r\n  auth,\r\n  handleUserProfile,\r\n  getCurrentUser,\r\n  GoogleProvider\r\n} from \"./../../firebase/utils\";\r\nimport actionTypes from \"../actionTypes\";\r\nimport {\r\n  signInSuccess,\r\n  signOutUserSuccess,\r\n  resetPasswordSuccess,\r\n  userError\r\n} from \"./user.actions\";\r\nimport { handleResetPasswordAPI } from \"./user.helpers\";\r\nexport function* getSnapshotFromUserAuth(user, additionalData = {}) {\r\n  /*\r\n\t so this will accept the user CURRENTLY logged in and \r\n\tchecks for it whether i exists in the users collection and if present then returs the rerference\r\n\tif not it creates the a new user and returns back the new user reference\r\n\tfrom that reference we fetch the actual user data and then we dispatch that so that redux store \r\n\twill be updated earlier we have setup a listener in app.js but now we have removed it and done this \r\n\tapproach and also created a user session approach for maintaining the user even when refresh\r\n\t*/\r\n  try {\r\n    const userRef = yield call(handleUserProfile, {\r\n      userAuth: user,\r\n      additionalData\r\n    });\r\n    const snapshot = yield userRef.get();\r\n    yield put(\r\n      signInSuccess({\r\n        id: snapshot.id,\r\n        ...snapshot.data()\r\n      })\r\n    );\r\n  } catch (err) {\r\n    yield put(userError(err));\r\n    // console.log(err);\r\n  }\r\n}\r\n\r\nexport function* emailSignIn({ payload: { email, password } }) {\r\n  /*\r\n\tThis is a worker saga which will be called by watcher saga and gets hold of the total action\r\n\tobject which we are destructuring it as { payload: { email, password } }\r\n\tand then we try to signin the user and if sucessful it return the user tried to signin\r\n\tand then calling getSnapshotFromUserAuth(user)\r\n\t\r\n\t*/\r\n  try {\r\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n    yield getSnapshotFromUserAuth(user);\r\n  } catch (err) {\r\n    yield put(userError(err.message));\r\n    // console.log(err);\r\n  }\r\n}\r\n\r\nexport function* onEmailSignInStart() {\r\n  /*\r\n\tThis is a watcher saga which will watch for dispatching of EMAIL_SIGN_IN_START\r\n\tand then calls the emailSignIn\r\n\t\r\n\t*/\r\n  yield takeLatest(actionTypes.EMAIL_SIGN_IN_START, emailSignIn);\r\n}\r\n\r\nexport function* isUserAuthenticated() {\r\n  /*\r\n\tThis is a saga which will run by below worker saga \r\n\tand we have avoided the listeer and made a promise wrapper around it in the firebase utils \r\n\twhich will subscribe and ge the userAuth which is either null or current user \r\n\tand instantly unsubscibe from it \r\n\tif userAuth null means just return do nothing that means no user logged in\r\n\tif their is a user then use the helper function getSnapshotFromUserAuth(userAuth);\r\n\t*/\r\n  try {\r\n    const userAuth = yield getCurrentUser();\r\n    if (!userAuth) return;\r\n    yield getSnapshotFromUserAuth(userAuth);\r\n  } catch (err) {\r\n    // console.log(err);\r\n  }\r\n}\r\n\r\nexport function* onCheckUserSession() {\r\n  //this saga is listening for this saga and which will called when we rerfresh the application\r\n  yield takeLatest(actionTypes.CHECK_USER_SESSION, isUserAuthenticated);\r\n}\r\n\r\nexport function* signOutUser() {\r\n  //we try to signout and then dispatch action to update the redux store\r\n  try {\r\n    yield auth.signOut();\r\n    yield put(signOutUserSuccess());\r\n  } catch (err) {\r\n    // console.log(err);\r\n  }\r\n}\r\n\r\nexport function* onSignOutUserStart() {\r\n  //wathcher saga for signout\r\n  yield takeLatest(actionTypes.SIGN_OUT_USER_START, signOutUser);\r\n}\r\n\r\nexport function* signUpUser({\r\n  payload: { displayName, email, password, confirmPassword }\r\n}) {\r\n  /*\r\n\tthis will be called when we try to register\r\n\twe check if both passwords are equal then dispatch an err\r\n\tif not hen we try to create a new user and it returns back a user if sucessfully created\r\n\tthen pass the user to getSnapshotFromUserAuth so that it updates the redux store\r\n\t*/\r\n  if (password !== confirmPassword) {\r\n    const err = \"Password Don't match\";\r\n    yield put(userError([err]));\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const { user } = yield auth.createUserWithEmailAndPassword(email, password);\r\n    const additionalData = { displayName };\r\n    yield getSnapshotFromUserAuth(user, additionalData);\r\n  } catch (err) {\r\n    yield put(userError(err.message));\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nexport function* onSignUpUserStart() {\r\n  //watcher saga for registartion\r\n  yield takeLatest(actionTypes.SIGN_UP_USER_START, signUpUser);\r\n}\r\n\r\nexport function* resetPassword({ payload: { email, handleSnackbar } }) {\r\n  //we will pass the handleer funcion to reset and email via call effect\r\n  //if sucessful then call the resetPasswordSucess\r\n  //if not dispatch the error\r\n  try {\r\n    yield call(handleResetPasswordAPI, email);\r\n    yield put(resetPasswordSuccess());\r\n    handleSnackbar();\r\n  } catch (err) {\r\n    yield put(userError(err));\r\n  }\r\n}\r\n\r\nexport function* onResetPasswordStart() {\r\n  yield takeLatest(actionTypes.RESET_PASSWORD_START, resetPassword);\r\n}\r\n\r\nexport function* googleSignIn() {\r\n  //this saga will be called by below worker and try to signin with google\r\n  //if successful then use the helper function getSnapshotFromUserAuth(user);\r\n  //if not then dispatch the err\r\n  try {\r\n    const { user } = yield auth.signInWithPopup(GoogleProvider);\r\n    yield getSnapshotFromUserAuth(user);\r\n  } catch (err) {\r\n    yield put(userError(err.message));\r\n    // console.log(err);\r\n  }\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n  yield takeLatest(actionTypes.GOOGLE_SIGN_IN_START, googleSignIn);\r\n}\r\n\r\nexport default function* userSagas() {\r\n  yield all([\r\n    call(onEmailSignInStart),\r\n    call(onCheckUserSession),\r\n    call(onSignOutUserStart),\r\n    call(onSignUpUserStart),\r\n    call(onResetPasswordStart),\r\n    call(onGoogleSignInStart)\r\n  ]);\r\n}\r\n","import { all, call } from \"redux-saga/effects\";\r\n\r\nimport userSagas from \"./User/user.sagas\";\r\n\r\nexport default function* rootSaga() {\r\n  yield all([call(userSagas)]);\r\n}\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport logger from \"redux-logger\";\r\nimport createSagaMiddle from \"redux-saga\";\r\n\r\nimport rootReducer from \"./rootReducer\";\r\nimport rootSaga from \"./rootSaga\";\r\n\r\nconst sagaMiddleware = createSagaMiddle();\r\nexport const middlewares = [sagaMiddleware, logger];\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;\r\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/createStore\";\n\nconsole.log(store);\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}